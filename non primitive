#include <stdio.h>

// Structure to represent a process
struct Process {
    int id;         // Process ID
    int burst_time; // Burst time of the process
};

// Function to perform non-preemptive SJF scheduling
void SJF(struct Process processes[], int n) {
    int waiting_time[n], turnaround_time[n];

    // Sort the processes by burst time in ascending order
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (processes[j].burst_time > processes[j + 1].burst_time) {
                // Swap the processes
                struct Process temp = processes[j];
                processes[j] = processes[j + 1];
                processes[j + 1] = temp;
            }
        }
    }

    waiting_time[0] = 0;
    turnaround_time[0] = processes[0].burst_time;

    // Calculate waiting and turnaround times for the rest of the processes
    for (int i = 1; i < n; i++) {
        waiting_time[i] = turnaround_time[i - 1];
        turnaround_time[i] = waiting_time[i] + processes[i].burst_time;
    }

    // Calculate the total waiting and turnaround time
    double total_waiting_time = 0, total_turnaround_time = 0;
    for (int i = 0; i < n; i++) {
        total_waiting_time += waiting_time[i];
        total_turnaround_time += turnaround_time[i];
    }

    // Calculate the average waiting and turnaround time
    double average_waiting_time = total_waiting_time / n;
    double average_turnaround_time = total_turnaround_time / n;

    // Print the results
    printf("Process\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t\t%d\t\t%d\t\t%d\n", processes[i].id, processes[i].burst_time, waiting_time[i], turnaround_time[i]);
    }
    printf("Average Waiting Time: %.2f\n", average_waiting_time);
    printf("Average Turnaround Time: %.2f\n", average_turnaround_time);
}

int main() {
    int n;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct Process processes[n];

    // Input process information
    for (int i = 0; i < n; i++) {
        processes[i].id = i + 1;
        printf("Enter burst time for process %d: ", i + 1);
        scanf("%d", &processes[i].burst_time);
    }

    // Call the SJF function to schedule the processes
    SJF(processes, n);

    return 0;
}
